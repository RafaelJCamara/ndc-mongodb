/*
 *
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MutationCapabilities {
    #[serde(
        rename = "atomicity_support_level",
        skip_serializing_if = "Option::is_none"
    )]
    pub atomicity_support_level: Option<crate::AtomicitySupportLevel>,
    #[serde(
        rename = "delete",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub delete: Option<Option<serde_json::Value>>,
    #[serde(rename = "insert", skip_serializing_if = "Option::is_none")]
    pub insert: Option<Box<crate::InsertCapabilities>>,
    #[serde(
        rename = "returning",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub returning: Option<Option<serde_json::Value>>,
    #[serde(
        rename = "update",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub update: Option<Option<serde_json::Value>>,
}

impl MutationCapabilities {
    pub fn new() -> MutationCapabilities {
        MutationCapabilities {
            atomicity_support_level: None,
            delete: None,
            insert: None,
            returning: None,
            update: None,
        }
    }
}
