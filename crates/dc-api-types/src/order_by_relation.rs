/*
 *
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OrderByRelation {
    /// Further relationships to follow from the relationship's target table. The key of the map is the relationship name.
    #[serde(rename = "subrelations")]
    pub subrelations: ::std::collections::HashMap<String, crate::OrderByRelation>,
    #[serde(rename = "where", skip_serializing_if = "Option::is_none")]
    pub r#where: Option<Box<crate::Expression>>,
}

impl OrderByRelation {
    pub fn new(
        subrelations: ::std::collections::HashMap<String, crate::OrderByRelation>,
    ) -> OrderByRelation {
        OrderByRelation {
            subrelations,
            r#where: None,
        }
    }
}
