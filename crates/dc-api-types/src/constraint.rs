/*
 *
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Constraint {
    /// The columns on which you want want to define the foreign key.
    #[serde(rename = "column_mapping")]
    pub column_mapping: ::std::collections::HashMap<String, String>,
    /// The fully qualified name of a table, where the last item in the array is the table name and any earlier items represent the namespacing of the table name
    #[serde(rename = "foreign_table")]
    pub foreign_table: Vec<String>,
}

impl Constraint {
    pub fn new(
        column_mapping: ::std::collections::HashMap<String, String>,
        foreign_table: Vec<String>,
    ) -> Constraint {
        Constraint {
            column_mapping,
            foreign_table,
        }
    }
}
