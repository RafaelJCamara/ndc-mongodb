/*
 *
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TableRelationships {
    /// A map of relationships from the source table to target tables. The key of the map is the relationship name
    #[serde(rename = "relationships")]
    pub relationships: ::std::collections::HashMap<String, crate::Relationship>,
    /// The fully qualified name of a table, where the last item in the array is the table name and any earlier items represent the namespacing of the table name
    #[serde(rename = "source_table")]
    pub source_table: Vec<String>,
}

impl TableRelationships {
    pub fn new(
        relationships: ::std::collections::HashMap<String, crate::Relationship>,
        source_table: Vec<String>,
    ) -> TableRelationships {
        TableRelationships {
            relationships,
            source_table,
        }
    }
}
