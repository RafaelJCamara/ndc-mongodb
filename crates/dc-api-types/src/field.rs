/*
 *
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use super::OrderBy;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "type")]
pub enum Field {
    #[serde(rename = "column")]
    Column {
        #[serde(rename = "column")]
        column: String,
        #[serde(rename = "column_type")]
        column_type: String,
    },
    #[serde(rename = "object")]
    NestedObject {
        #[serde(rename = "column")]
        column: String,
        #[serde(rename = "query")]
        query: Box<crate::Query>,
    },
    #[serde(rename = "array")]
    NestedArray {
        field: Box<Field>,
        limit: Option<u32>,
        offset: Option<u32>,
        #[serde(rename = "where")]
        r#where: Option<OrderBy>,
    },
    #[serde(rename = "relationship")]
    Relationship {
        #[serde(rename = "query")]
        query: Box<crate::Query>,
        /// The name of the relationship to follow for the subquery
        #[serde(rename = "relationship")]
        relationship: String,
    },
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "column")]
    Column,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Column
    }
}
