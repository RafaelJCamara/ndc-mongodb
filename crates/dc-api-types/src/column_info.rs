/*
 *
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use super::ColumnType;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ColumnInfo {
    /// Column description
    #[serde(
        rename = "description",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub description: Option<Option<String>>,
    /// Whether or not the column can be inserted into
    #[serde(rename = "insertable", skip_serializing_if = "Option::is_none")]
    pub insertable: Option<bool>,
    /// Column name
    #[serde(rename = "name")]
    pub name: String,
    /// Is column nullable
    #[serde(rename = "nullable")]
    pub nullable: bool,
    #[serde(rename = "type")]
    pub r#type: crate::ColumnType,
    /// Whether or not the column can be updated
    #[serde(rename = "updatable", skip_serializing_if = "Option::is_none")]
    pub updatable: Option<bool>,
    #[serde(rename = "value_generated", skip_serializing_if = "Option::is_none")]
    pub value_generated: Option<Box<crate::ColumnValueGenerationStrategy>>,
}

impl ColumnInfo {
    pub fn new(name: String, nullable: bool, r#type: ColumnType) -> ColumnInfo {
        ColumnInfo {
            description: None,
            insertable: None,
            name,
            nullable,
            r#type,
            updatable: None,
            value_generated: None,
        }
    }
}
