/*
 *
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TableInfo {
    /// The columns of the table
    #[serde(rename = "columns")]
    pub columns: Vec<crate::ColumnInfo>,
    /// Whether or not existing rows can be deleted in the table
    #[serde(rename = "deletable", skip_serializing_if = "Option::is_none")]
    pub deletable: Option<bool>,
    /// Description of the table
    #[serde(
        rename = "description",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub description: Option<Option<String>>,
    /// Foreign key constraints
    #[serde(rename = "foreign_keys", skip_serializing_if = "Option::is_none")]
    pub foreign_keys: Option<::std::collections::HashMap<String, crate::Constraint>>,
    /// Whether or not new rows can be inserted into the table
    #[serde(rename = "insertable", skip_serializing_if = "Option::is_none")]
    pub insertable: Option<bool>,
    /// The fully qualified name of a table, where the last item in the array is the table name and any earlier items represent the namespacing of the table name
    #[serde(rename = "name")]
    pub name: Vec<String>,
    /// The primary key of the table
    #[serde(rename = "primary_key", skip_serializing_if = "Option::is_none")]
    pub primary_key: Option<Vec<String>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<crate::TableType>,
    /// Whether or not existing rows can be updated in the table
    #[serde(rename = "updatable", skip_serializing_if = "Option::is_none")]
    pub updatable: Option<bool>,
}

impl TableInfo {
    pub fn new(columns: Vec<crate::ColumnInfo>, name: Vec<String>) -> TableInfo {
        TableInfo {
            columns,
            deletable: None,
            description: None,
            foreign_keys: None,
            insertable: None,
            name,
            primary_key: None,
            r#type: None,
            updatable: None,
        }
    }
}
