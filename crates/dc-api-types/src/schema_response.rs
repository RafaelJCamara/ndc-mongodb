/*
 *
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SchemaResponse {
    /// Object type definitions referenced in this schema
    #[serde(rename = "objectTypes", skip_serializing_if = "Vec::is_empty", default)]
    pub object_types: Vec<crate::ObjectTypeDefinition>,
    /// Available tables
    #[serde(rename = "tables")]
    pub tables: Vec<crate::TableInfo>,
}

impl SchemaResponse {
    pub fn new(tables: Vec<crate::TableInfo>) -> SchemaResponse {
        SchemaResponse {
            object_types: vec![],
            tables,
        }
    }
}
