/*
 *
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OrderBy {
    /// The elements to order by, in priority order
    #[serde(rename = "elements")]
    pub elements: Vec<crate::OrderByElement>,
    /// A map of relationships from the current query table to target tables. The key of the map is the relationship name. The relationships are used within the order by elements.
    #[serde(rename = "relations")]
    pub relations: ::std::collections::HashMap<String, crate::OrderByRelation>,
}

impl OrderBy {
    pub fn new(
        elements: Vec<crate::OrderByElement>,
        relations: ::std::collections::HashMap<String, crate::OrderByRelation>,
    ) -> OrderBy {
        OrderBy {
            elements,
            relations,
        }
    }
}
